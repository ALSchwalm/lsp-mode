<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>LSP Mode - LSP support for Emacs</title><description>Language Server Protocol Support for Emacs</description><link>https://emacs-lsp.github.io/lsp-mode/</link><atom:link href="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><managingEditor>ercdll1337@gmail.com</managingEditor><docs>https://github.com/emacs-lsp/lsp-mode/</docs><language>en</language> <pubDate>Wed, 07 Jul 2021 19:23:58 -0000</pubDate> <lastBuildDate>Wed, 07 Jul 2021 19:23:58 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v0.11.0</generator> <item> <title>7.0 Release</title> <description># 7.0 ReleaseI am pleased to announce `lsp-mode` 7.0!Here are the most important features/news in 7.0 release## lsp-mode/the team/the ecosystem`lsp-mode</description><link>https://emacs-lsp.github.io/lsp-mode/blog/2020/7.0-release/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/blog/2020/7.0-release/</guid> </item> <item> <title>Lsp latex</title> <description>## Available functions### `lsp-latex-build`Build .tex files with texlab.It use latexmk by default, so add .latexmkrc if you want to customizelatex commands </description><link>https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-latex/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-latex/</guid> </item> <item> <title>Literate programming using LSP and org-mode(alpha)</title> <description># Literate programming using LSP and org-mode(alpha)`lsp-mode` provides **experimental** support for running the language serversinside of [org-mode](https://</description><link>https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-org/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-org/</guid> </item> <item> <title>Lsp rust analyzer</title> <description>## Server noteNOTE: If you are using `rustic-mode`, you have to change `rustic-lsp-server` instead of `lsp-rust-server`, since it also supports eglot as a lig</description><link>https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-rust-analyzer/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-rust-analyzer/</guid> </item> <item> <title>Lsp rust rls</title> <description>## RLS### CustomizationThis is an incomplete list of the available options- `lsp-rust-rls-server-command` change command to start RLS- `lsp-rust-show-ho</description><link>https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-rust-rls/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-rust-rls/</guid> </item> <item> <title>Sample configuration:</title> <description># Sample configuration:``` emacs-lisp(setq lsp-sqls-connections &#39;(((driver . &#34;mysql&#34;) (dataSourceName . &#34;yyoncho:local@tcp(localhost:3306)/foo&#34;)) </description><link>https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-sqls/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/manual-language-docs/lsp-sqls/</guid> </item> <item> <title>Adding new language</title> <description># Adding support for languages## Registering serverHere it is the minimal configuration that is needed for new languageserver registration. Refer to the do</description><link>https://emacs-lsp.github.io/lsp-mode/page/adding-new-language/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/adding-new-language/</guid> </item> <item> <title>FAQ</title> <description># FAQ### :grey_question: How do I troubleshoot `&#34;Server FOO-LS:pid exited with status signal. Do you want to restart it? (y or n)&#34;`?This message indicates t</description><link>https://emacs-lsp.github.io/lsp-mode/page/faq/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/faq/</guid> </item> <item> <title>File watchers</title> <description># File watchersWhen some of the workspaces that are active in the current project requests file notifications via `workspace/didChangeWatchedFiles`, `lsp-mode</description><link>https://emacs-lsp.github.io/lsp-mode/page/file-watchers/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/file-watchers/</guid> </item> <item> <title>Gallery</title> <description>Gallery=======## RUST Completion![](../examples/completion.png)## Typescript references using lsp-ui![](../examples/references.png)## Debugging Pytho</description><link>https://emacs-lsp.github.io/lsp-mode/page/gallery/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/gallery/</guid> </item> <item> <title>Installation</title> <description># InstallationYou need first `lsp-mode`, that is a Emacs client for an LSP server.Then you need to install the specific LSP server for your language.Finally</description><link>https://emacs-lsp.github.io/lsp-mode/page/installation/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/installation/</guid> </item> <item> <title>Keybindings</title> <description># KeybindingsWhen using `lsp-mode` most of the features depend on servercapabilities. `lsp-mode` provides default bindings which are dynamicallyenabled/disa</description><link>https://emacs-lsp.github.io/lsp-mode/page/keybindings/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/keybindings/</guid> </item> <item> <title>Languages</title> <description># LanguagesOn left, you can find all currently supported languages.Some languages have to be installed manually. Others can be installed with &lt;kbd&gt;M-x&lt;/kbd&gt;</description><link>https://emacs-lsp.github.io/lsp-mode/page/languages/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/languages/</guid> </item> <item> <title>Main features</title> <description># Main features## Completion at pointIf LSP server supports completion, `lsp-mode` use symbols returned by the server to present the user when completion is</description><link>https://emacs-lsp.github.io/lsp-mode/page/main-features/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/main-features/</guid> </item> <item> <title>Performance</title> <description>Performance===========## TuningUse `M-x lsp-doctor` to validate if your `lsp-mode` is properly configured. In the section below, you could find description</description><link>https://emacs-lsp.github.io/lsp-mode/page/performance/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/performance/</guid> </item> <item> <title>Remote</title> <description># Remote## TRAMPLSP mode has support for tramp buffers with the following requirements:- The language server has to be present on the remote server.- Hav</description><link>https://emacs-lsp.github.io/lsp-mode/page/remote/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/remote/</guid> </item> <item> <title>Troubleshooting</title> <description>Troubleshooting===============- Check `*lsp-log*` buffer and verify that `lsp-mode` is able to find the server. If `lsp-mode` is unable to find the binary bu</description><link>https://emacs-lsp.github.io/lsp-mode/page/troubleshooting/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/troubleshooting/</guid> </item> <item> <title>Dired integration</title> <description># Dired integration`lsp-mode` provides integration with `dired` file explorer. `lsp-mode` will showwhich files/folders contain errors/warnings/hints. To enab</description><link>https://emacs-lsp.github.io/lsp-mode/page/integration/dired/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/integration/dired/</guid> </item> <item> <title>Ido</title> <description># Ido integration`lsp-mode` provides integration with `ido` for `workspace-symbol`command. `lsp-mode` will show all workspace/project symbols using IDO.To e</description><link>https://emacs-lsp.github.io/lsp-mode/page/integration/ido/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/integration/ido/</guid> </item> <item> <title>Iedit</title> <description># iedit`lsp-mode` can leverage [`iedit`](https://github.com/victorhge/iedit) to editsemantic matches in parallel:- `lsp-iedit-highlights`: invoke `iedit` o</description><link>https://emacs-lsp.github.io/lsp-mode/page/integration/iedit/</link> <pubDate>Wed, 07 Jul 2021 20:08:18 -0000</pubDate><source url="https://emacs-lsp.github.io/lsp-mode/feed_rss_updated.xml">LSP Mode - LSP support for Emacs</source><guid isPermaLink="true">https://emacs-lsp.github.io/lsp-mode/page/integration/iedit/</guid> </item> </channel></rss>